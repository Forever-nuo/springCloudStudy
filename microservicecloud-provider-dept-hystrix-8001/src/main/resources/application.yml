##################################服务相关配置###############################################
server:
  port: 8001


##################################日志配置#########################
debug: true


spring:
#################################应用相关配置##################################################
  application:
    name: microservicecloud-dept #微服务的暴露的名称
#################################数据源相关配置##################################################
  datasource:
    driver-class-name: org.gjt.mm.mysql.Driver
    url: jdbc:mysql://localhost:3306/cloud01
    username: root
    password: root
    type: com.alibaba.druid.pool.DruidDataSource
    #配置 连接池的属性
        # 下面为连接池的补充设置，应用到上面所有数据源中
          # 初始化大小，最小，最大
    initialSize: 1
    minIdle: 3
    maxActive: 20
    # 配置获取连接等待超时的时间
    maxWait: 60000
    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
    timeBetweenEvictionRunsMillis: 60000
    # 配置一个连接在池中最小生存的时间，单位是毫秒
    minEvictableIdleTimeMillis: 30000
    validationQuery: select 'x'
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
    # 打开PSCache，并且指定每个连接上PSCache的大小
    poolPreparedStatements: true
    maxPoolPreparedStatementPerConnectionSize: 20
    # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
    filters: stat,wall,slf4j
    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000



    # 合并多个DruidDataSource的监控数据
    #useGlobalDataSourceStat: true



#####################################mybatis整合###########################################
mybatis-plus:
  type-aliases-package: com.forever.springcloud.entity  #实体别名所在的包
  mapper-locations: classpath:mybatis/mapper/*.xml  #映射文件
  config-location:  classpath:mybatis/mybatis.cfg.xml #配置文件位置
  global-config:
    db-column-underline: false




####################################eureak配置###########################################
eureka:
  client:
    service-url:
      defaultZone : http://eureka7001.com:7001/eureka,http://eureka7002.com:7002/eureka,http://eureka7003.com:7003/eureka
  instance:
    instance-id: 192.168.56.1-${spring.application.name}-:${server.port}-hystrix
    prefer-ip-address: true

info:
  app.name : forever-microservicecloud
  company.name : www.forever.com
  build.artifactId: $project.artifactId$
  build.version: $project.version$

